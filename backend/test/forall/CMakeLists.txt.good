# This program file was generated by the chplx compiler.
# The original Chapel program file can be found here: "forall.chpl"
#
cmake_minimum_required(VERSION 3.19)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Configuration type" FORCE)
endif()
project(forall)
add_executable( forall forall.cpp )
if(NOT APPLE)
  set(CMAKE_CXX_STANDARD 20)
endif()
if(NOT WIN32 AND ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" AND NOT APPLE)
  set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -stdlib=libc++)
endif()
if(NOT (CHPLX_LIBRARY AND CHPLX_INCLUDE_DIR))
  message(FATAL_ERROR "CHPLX_LIBRARY or CHPLX_INCLUDE_DIR variables undefined")
endif()
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
find_package(fmt REQUIRED CONFIG)
find_package(HPX REQUIRED CONFIG)
add_library(chplx_library STATIC IMPORTED)
set_target_properties(chplx_library PROPERTIES
  IMPORTED_LOCATION "${CHPLX_LIBRARY}"
  INTERFACE_INCLUDE_DIRECTORIES "${CHPLX_INCLUDE_DIR}"
)
set(forall_sources forall.cpp)
set(forall_headers forall.hpp)
if(NOT WIN32 AND ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" AND APPLE)
  find_library(CORE_LIBPATH NAMES CoreFoundation REQUIRED)
  target_compile_options(forall
    PUBLIC
    -nostdlib
    -std=c++20
    -O3
    -stdlib=libc++
  )
  target_link_libraries(forall PRIVATE ${CORE_LIBPATH})
  target_link_libraries(forall
    PUBLIC
    c++
  )
endif()
target_link_libraries(forall PUBLIC fmt::fmt-header-only HPX::hpx chplx_library)
enable_testing()
include(CTest)
add_test(
  NAME forall_test
  COMMAND forall
  WORKING_DIRECTORY $<TARGET_FILE_DIR:forall>
)
