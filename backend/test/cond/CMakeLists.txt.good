#
# This program file was generated by the chplx compiler.
# The original Chapel program file can be found here: "cond.chpl"
#
cmake_minimum_required(VERSION 3.19)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Configuration type" FORCE)
endif()
project(cond)
add_executable(cond cond.cpp cond_driver.cpp)
set(CMAKE_CXX_STANDARD 20)
set(CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED YES)
if(NOT WIN32 AND ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" AND NOT APPLE)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20 -stdlib=libc++")
endif()
if(NOT Chplx_DIR)
  message(FATAL_ERROR "Chplx_DIR variable undefined")
endif()
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
find_package(fmt REQUIRED CONFIG)
find_package(HPX REQUIRED CONFIG)
find_package(Chplx REQUIRED CONFIG)
set(cond_sources cond.cpp cond_driver.cpp)
set(cond_headers cond.hpp cond_driver.hpp)
if(NOT WIN32 AND ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang" AND APPLE)
  find_library(CORE_LIBPATH NAMES CoreFoundation REQUIRED)
  target_compile_options(cond
    PUBLIC
    -nostdlib
    -std=c++20
    -O3
    -stdlib=libc++
  )
  target_link_libraries(cond PRIVATE ${CORE_LIBPATH})
  target_link_libraries(cond
    PUBLIC
    c++
  )
endif()
target_link_libraries(cond PUBLIC fmt::fmt-header-only HPX::hpx Chplx::library)
enable_testing()
include(CTest)
add_test(
  NAME cond_test
  COMMAND cond
  WORKING_DIRECTORY $<TARGET_FILE_DIR:cond>
)
