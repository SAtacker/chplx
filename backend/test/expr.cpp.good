// This program file was generated by the chplx compiler.
// The original Chapel program file can be found here: "expr.chpl"
//
#include <hpx/hpx_init.hpp>

#include "expr.hpp"

int hpx_main(int argc, char ** argv) {

    #line 5 "expr.chpl"
    std::int64_t a;
    #line 6 "expr.chpl"
    a = 1 + 1;
    #line 8 "expr.chpl"
    a = a + 1;
    #line 9 "expr.chpl"
    a = 1 + a;
    #line 10 "expr.chpl"
    a = a + a;
    #line 11 "expr.chpl"
    a = ( a + a ) + a;
    #line 12 "expr.chpl"
    a = ( a + a ) + 1;
    #line 13 "expr.chpl"
    a = ( ( 1 + a ) + a ) + a;
    #line 14 "expr.chpl"
    a = ( ( a + 1 ) + a ) + a;
    #line 15 "expr.chpl"
    a = ( ( a + a ) + 1 ) + a;
    #line 16 "expr.chpl"
    a = ( ( a + a ) + a ) + 1;
    #line 18 "expr.chpl"
    a = 1 + ( 1 + 1 );
    #line 19 "expr.chpl"
    a = ( 1 + 1 ) + 1;
    #line 20 "expr.chpl"
    a = a + ( ( a + a ) + a );
    #line 21 "expr.chpl"
    a = ( ( a + a ) + a ) + a;
    #line 22 "expr.chpl"
    a = 1 + ( 1 * 1 );
    #line 23 "expr.chpl"
    a = 1 + a;
    #line 24 "expr.chpl"
    a = a + a;
    #line 25 "expr.chpl"
    a = a + ( a + a );
    #line 26 "expr.chpl"
    a = ( a + a ) + a;
    #line 27 "expr.chpl"
    a = a + ( ( a + a ) + a );
    #line 28 "expr.chpl"
    a = ( ( a + a ) + a ) + a;
    #line 30 "expr.chpl"
    std::function<std::int64_t()> value = [&]() -> std::int64_t {
        #line 31 "expr.chpl"
        return 1;
    };
    #line 34 "expr.chpl"
    a = valuea();
    #line 35 "expr.chpl"
    a = 1 + valuea();
    #line 36 "expr.chpl"
    a = valuea() + 1;
    #line 37 "expr.chpl"
    a = valuea() + valuea();
    #line 38 "expr.chpl"
    a = a + ( valuea() + valuea() );
    #line 39 "expr.chpl"
    a = ( valuea() + valuea() ) + a;
    #line 40 "expr.chpl"
    a = ( ( valuea() + valuea() ) + valuea() ) + a;
    #line 41 "expr.chpl"
    a = a + ( ( valuea() + valuea() ) + valuea() );
    #line 43 "expr.chpl"
    std::function<std::int64_t(std::int64_t)> valuea = [&](std::int64_t a) -> std::int64_t {
        #line 44 "expr.chpl"
        return a;
    };
    #line 47 "expr.chpl"
    a = valuea(a);
    #line 48 "expr.chpl"
    a = valuea(1 + a);
    #line 49 "expr.chpl"
    a = 1 + valuea(1 + a);
    #line 50 "expr.chpl"
    a = valuea(1 + a) + 1;
    #line 52 "expr.chpl"
    a = 1 + valuea(a);
    #line 53 "expr.chpl"
    a = valuea(a) + 1;
    #line 54 "expr.chpl"
    a = valuea(a) + valuea(a);
    #line 55 "expr.chpl"
    a = a + ( valuea(a) + valuea(a) );
    #line 56 "expr.chpl"
    a = ( valuea(a) + valuea(a) ) + a;
    #line 57 "expr.chpl"
    a = ( ( valuea(a) + valuea(a) ) + valuea(a) ) + a;
    #line 58 "expr.chpl"
    a = a + ( ( valuea(a) + valuea(a) ) + valuea(a) );
    #line 60 "expr.chpl"
    std::vector<std::int64_t> b(10);
    #line 61 "expr.chpl"
    b[0] = 1;
    #line 62 "expr.chpl"
    b[0] = a;
    #line 63 "expr.chpl"
    b[0] = a;
    #line 64 "expr.chpl"
    b[0] = b[0];
    #line 65 "expr.chpl"
    b[0] = b[0];
    #line 66 "expr.chpl"
    b[0] = b[0];
    #line 67 "expr.chpl"
    b[0] = b[0];
    #line 68 "expr.chpl"
    b[0 + 0] = 1;
    #line 69 "expr.chpl"
    b[0 + 0] = 1;
    #line 70 "expr.chpl"
    b[0 + 0] = a;
    #line 71 "expr.chpl"
    b[0 + 0] = a;
    #line 72 "expr.chpl"
    b[0 + 0] = b[0];
    #line 73 "expr.chpl"
    b[0 + 0] = b[0];
    #line 74 "expr.chpl"
    b[0 + 0] = b[0 + 0];
    #line 75 "expr.chpl"
    b[0 + 0] = b[0 + 0];
    #line 77 "expr.chpl"
    std::vector<std::vector<std::int64_t>> c = {{1,2},{3,4}};
    #line 78 "expr.chpl"
    c[0][0] = 0;
    #line 79 "expr.chpl"
    c[0][0] = a;
    #line 80 "expr.chpl"
    c[0][0] = 0;
    #line 81 "expr.chpl"
    c[0][0] = a;
    #line 82 "expr.chpl"
    c[0][0] = c[0][0];
    #line 83 "expr.chpl"
    c[0][0] = c[0][0];
    #line 84 "expr.chpl"
    c[0][0] = c[0][0];
    #line 85 "expr.chpl"
    c[0][0] = c[0][0];
    #line 86 "expr.chpl"
    c[0 + 0][0] = 1;
    #line 87 "expr.chpl"
    c[0 + 0][0] = 1;
    #line 89 "expr.chpl"
    std::function<std::int64_t(std::int64_t)> valueb = [&](std::int64_t a) -> std::int64_t {
        #line 90 "expr.chpl"
        std::int64_t x;
        #line 90 "expr.chpl"
        valuea(a);
        #line 91 "expr.chpl"
        return valuea(a) + x;
    };

    return hpx::finalize();
}

int main(int argc, char ** argv) {
    return hpx::init(argc, argv);
}